//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ErrorLibrary.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ErrorLibrary.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Agenda model&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Agenda model utility panics: &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;The agenda model is in a state inconsistent with an action being requested of it. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;An entry contai [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Agenda_model {
            get {
                return ResourceManager.GetString("Agenda_model", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;ALLOC&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;These panics are raised in debug builds only and are caused when the heap debugging functions detect a memory leak.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt; nnnnnnnn&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;This panic is raised by the &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;RHeap::__DbgMarkEnd()&amp;lt;/code&amp;gt;  and &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;User::__D [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ALLOC {
            get {
                return ResourceManager.GetString("ALLOC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;ALLOC COUNT&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;These panics are only raised in debug builds and are caused when the heap debugging functions detect a memory leak.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt; ALLOC COUNT 1 Expected aaaa Allocated bbbb Ln: ccc ddddd&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;This panic is raised by  &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;RHeap::__DbgMarkCheck()&amp;lt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ALLOC_COUNT {
            get {
                return ResourceManager.GetString("ALLOC_COUNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;BAFL&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Basic Application Framework Library (BFL.lib) panics. A number of APIs raise these panics. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;These are:&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Application Utilities &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Command Line Parsing &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Environment Change Notifier &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Incremental Matcher &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Interface to Resource Files &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;pan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BAFL {
            get {
                return ResourceManager.GetString("BAFL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;BITGDI&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Bitmaps (Graphical device) panics:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;No graphics device specified for use with &amp;lt;code&amp;gt;CFbsBitGc&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Unused&amp;lt;/p&amp;gt;&lt;/pani [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string BITGDI {
            get {
                return ResourceManager.GetString("BITGDI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Bitmap Utility&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;TImageBitmapUtilPanic:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;ECorrupt&amp;lt;/code&amp;gt; - Data is corrupt cannot continue.&amp;lt;/p&amp;gt;	   &lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///  &lt;/panics&gt;
        ///&lt;/panic_category&gt;.
        /// </summary>
        internal static string Bitmap_Utility {
            get {
                return ResourceManager.GetString("Bitmap_Utility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;C32-fault&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic due to internal error of Serial Comms Server (or &amp;amp;quot;Comms Server&amp;amp;quot;).&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Failed to install active scheduler or error running the scheduler.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string C32_fault {
            get {
                return ResourceManager.GetString("C32_fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CESockIniData&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Socket panic when reading esock.ini&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Section name exceeded maximum length&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Variable name exceeded maximum length&amp;lt;/p&amp;gt; 	   &lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CESockIniData {
            get {
                return ResourceManager.GetString("CESockIniData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CHWComm&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of ECUART module raised by the Serial Comms Server (or &amp;amp;quot;CommsServer&amp;amp;quot;).&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Bad descriptor passed by client.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CHWComm {
            get {
                return ResourceManager.GetString("CHWComm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CInSock&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of TCP/IP relating to socket implementation&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Connectionless socket used when connected type required&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Attempt to send or receive  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CInSock {
            get {
                return ResourceManager.GetString("CInSock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Clock-client&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panics by the clock library:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Clock is already constructed&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Clock is already constructed&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/pani [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Clock {
            get {
                return ResourceManager.GetString("Clock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CMdaAudioOutputStream&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Audio streaming panics&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;An attempt was made to change the audio stream player&apos;s properties while still writing to the stream.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CMdaAudioOutputStream {
            get {
                return ResourceManager.GetString("CMdaAudioOutputStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Comm server&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of client raised by the Serial Comms Server (or &amp;amp;quot;Comms Server&amp;amp;quot;).&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Write request made when request already in progress.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_descript [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Comm_Server {
            get {
                return ResourceManager.GetString("Comm_Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CommsDbServer&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;CommDb panics:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;CCommsDbTableView::InsertRecord()&amp;lt;/code&amp;gt; called when &amp;lt;code&amp;gt;InsertRecord()&amp;lt;/code&amp;gt; or &amp;lt;code&amp;gt;UpdateRecord()&amp;lt;/code&amp;gt; has already been made.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CommsDbServer {
            get {
                return ResourceManager.GetString("CommsDbServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CONARC&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Converter Architecture panics&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;CCnaScanningConverterFinder::NextL()&amp;lt;/code&amp;gt; called before &amp;lt;code&amp;gt;FindAllConvL()&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_descripti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CONARC {
            get {
                return ResourceManager.GetString("CONARC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CONE&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;User Interface Control Framework panics&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Environment start up error &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Environment already exists &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CONE {
            get {
                return ResourceManager.GetString("CONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;CWAPSession&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;The WAP Stack API can raise panics with the category CWAPSession, and the following codes:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Client made unrecognised request to  WAP server&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CWAPSession {
            get {
                return ResourceManager.GetString("CWAPSession", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;E32USER-CBase&lt;/category_name&gt;
        ///  &lt;category_description&gt;Panics with this category are raised in user side code by member functions of CBase derived classes that reside in euser.dll. Typically, they are caused by passing bad or contradictory values to class constructors or member functions.&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;The thread causing the panic is terminated.&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///	&lt;panic&gt;
        ///    	&lt;panic_id&gt;1&lt;/panic_id&gt;
        ///    	&lt;pan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string E32USER_CBase {
            get {
                return ResourceManager.GetString("E32USER_CBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;EIKCOCTL&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;TechView Core Controls panics:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Unused&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Environment could not be created&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EIKCOCTL {
            get {
                return ResourceManager.GetString("EIKCOCTL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;error_codes&gt;
        ///  &lt;error&gt;
        ///    &lt;error_name&gt;KErrNotFound&lt;/error_name&gt;
        ///    &lt;error_value&gt;-1&lt;/error_value&gt;
        ///    &lt;error_component&gt;E32  (E32ERR.H)&lt;/error_component&gt;
        ///    &lt;error_text&gt;Unable to find the specified object&lt;/error_text&gt;
        ///  &lt;/error&gt;
        ///  &lt;error&gt;
        ///    &lt;error_name&gt;KErrGeneral&lt;/error_name&gt;
        ///    &lt;error_value&gt;-2&lt;/error_value&gt;
        ///    &lt;error_component&gt;E32  (E32ERR.H)&lt;/error_component&gt;
        ///    &lt;error_text&gt;General (unspecified) error&lt;/error_text&gt;
        ///  &lt;/error&gt;
        ///  &lt;error&gt;
        ///    &lt;erro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ErrorCodes {
            get {
                return ResourceManager.GetString("ErrorCodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;ESock&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of client from Sockets Server&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Unknown socket &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Unused &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ESock {
            get {
                return ResourceManager.GetString("ESock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;eSock fault&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of Sockets Server due to internal Sockets Server error&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Socket server initiation error&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;No comms server available&amp;lt;/p&amp;gt;&lt;/ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string eSock_fault {
            get {
                return ResourceManager.GetString("eSock_fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;eSock panic&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of client from Sockets Server due to server error&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;From the TESockCliPanic enumeration.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Failed to create Sockets Server&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_descri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string eSock_panic {
            get {
                return ResourceManager.GetString("eSock_panic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Etel Server&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic caused by incorrect use of the ETel Core API- e.g. passing bad or contradictory values to class constructors or member functions.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;The client thread causing the panic is terminated.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;The subsession handle is not recognised by th [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Etel_Server {
            get {
                return ResourceManager.GetString("Etel_Server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Exceptions&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Exceptions are generated by internal and external sources to cause the processor to handle an event, such as an externally generated interrupt or an attempt to execute an Undefined instruction. The processor state just before handling the exception is normally preserved so that the original program can be resumed when the exception routine has completed. More than one exce [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Exceptions {
            get {
                return ResourceManager.GetString("Exceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;FBSCLI&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; Panics raised by clients of the font and bitmap server. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; No connection has been made to the font and bitmap server. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Attempted to p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FBSCLI {
            get {
                return ResourceManager.GetString("FBSCLI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Form&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Text Views panics: &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;201&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; A NULL layout handle was passed to &amp;lt;code&amp;gt;CTextView::NewL()&amp;lt;/code&amp;gt;, or to &amp;lt;code&amp;gt;CTextView::SetLayout()&amp;lt;/code&amp;gt; &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;202&lt;/panic_id&gt;
        ///      &lt;pani [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Form {
            get {
                return ResourceManager.GetString("Form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;FSCLIENT panic&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; Panics with this category are raised on clients requesting services provided by the file server. Typically, they are caused by passing bad or contradictory values to class constructors or member functions. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; The thread causing the panic is terminated. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; To avoid confusion, we need to emphasise that the panic category is the 14 cha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FSCLIENT_panic {
            get {
                return ResourceManager.GetString("FSCLIENT_panic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;HTTP-COOKIE&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Cookie filter panics. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Invalid filter state &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; The &amp;lt;code&amp;gt;aCookieList&amp;lt;/code&amp;gt; array passed to &amp;lt;code class=&quot;ApiItem&quot;&amp; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HTTP_COOKIEform {
            get {
                return ResourceManager.GetString("HTTP_COOKIEform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;HTTP-CORE&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; Transport Framework Client panics. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;RHTTPSession&amp;lt;/code&amp;gt; session is already open. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Specified header field is mis [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HTTP_CORE {
            get {
                return ResourceManager.GetString("HTTP_CORE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;ImageConversion&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; Panics used in the Image Conversion Library &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; No source bitmap. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; No destination bitmap. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ImageConversion {
            get {
                return ResourceManager.GetString("ImageConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;IMAPServer&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; IMAPServer panics are raised by the IMAP server-side MTM. They are used to signal errors in the implementation of the MTM, and are raised in debug builds. The panic codes are divided into a number of ranges, each of which relates to a particular area of functionality in the MTM: &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0-999&lt;/panic_id&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IMAPServer {
            get {
                return ResourceManager.GetString("IMAPServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;InSock&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; Panic of insock.dll &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;TInetAddr&amp;lt;/code&amp;gt; constructor call with &amp;lt;code&amp;gt;TSockAddr&amp;lt;/code&amp;gt; argument of incorrect protocol family &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///  &lt;/panics&gt;
        ///&lt;/panic_category&gt;.
        /// </summary>
        internal static string InSock {
            get {
                return ResourceManager.GetString("InSock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Irda Fault&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; IrDA sockets (infra-red protocol) panics: &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Unused &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; Unused &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;pan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Irda_Fault {
            get {
                return ResourceManager.GetString("Irda_Fault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;KERN&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; These panic numbers represent errors which cause the Kernel itself to terminate. When the kernel terminates for the reasons listed here, it is said to fault rather than panic. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; The faults themselves are raised by kernel side code. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Note:many of the faults listed here are raised in debug builds only. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;pa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KERN {
            get {
                return ResourceManager.GetString("KERN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Kern-Common&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;KERN-COMMON panics are raised by the kernel when various kernel-side utility functions are called with bad arguments.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;19&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;This panic is raised if an invalid descriptor type is given to Kern::KUDesGet() or Kern::KUDesPut(). &amp;lt;/p&amp;gt;&lt;/panic_description&gt;        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Kern_Common {
            get {
                return ResourceManager.GetString("Kern_Common", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;KERN-EXEC&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; These panics represent program errors which are detected by the Kernel Executive. Typically, they are caused by passing bad or contradictory parameters to functions. Threads which cause exceptions also raise a KERN-EXEC panic. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; The thread causing the panic is terminated. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/pani [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KERN_EXEC {
            get {
                return ResourceManager.GetString("KERN_EXEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Kern-Heap&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;KERN-HEAP panics are raised by the kernel when bad parameters are passed to kernel-side heap functions. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;39&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;This panic is raised when the size specified for the new heap is smaller than the permitted minimum; it must be at least the size of a RHeap object [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Kern_Heap {
            get {
                return ResourceManager.GetString("Kern_Heap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;MATHX&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;These panics represent errors raised by member functions of the &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;TRealX&amp;lt;/code&amp;gt; class. Typically, they are the result of illegal maths operations, such as dividing by zero, or operations which result in overflow.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The thread causing the panic is terminated.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MATX {
            get {
                return ResourceManager.GetString("MATX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;MSGS&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Messaging panics of Message Server from the &amp;lt;code&amp;gt;msgs&amp;lt;/code&amp;gt; library&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;11&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Parent of context could not be found&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;12&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Parent of conte [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MSGS {
            get {
                return ResourceManager.GetString("MSGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;MSGS Client&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Client messaging panics from the &amp;lt;code&amp;gt;msgs&amp;lt;/code&amp;gt; library&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Unsupported asynchronous request made to Message Server&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MSGS_Client {
            get {
                return ResourceManager.GetString("MSGS_Client", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;MTMUI Data&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Messaging panic from the &amp;lt;code class=&quot;filename&quot;&amp;gt;mtur&amp;lt;/code&amp;gt; library relating to UI Data MTM operations&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Inconsistent start/end and zoom parameters passed to &amp;lt;code&amp;gt;CBaseMtmUiData::CreateBitmapsL()&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;&lt;/panic_descripti [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MTMUI_Data {
            get {
                return ResourceManager.GetString("MTMUI_Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;MTUI&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Messaging panics from the &amp;lt;code class=&quot;filename&quot;&amp;gt;mtur&amp;lt;/code&amp;gt; library relating to User Interface MTM operations&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Empty selection passed to &amp;lt;code&amp;gt;CBaseMtmUi&amp;lt;/code&amp;gt; move, copy, or delete function&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MTUI {
            get {
                return ResourceManager.GetString("MTUI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;PLAT (emulator)&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;These panics represent errors which are detected by emulator   specific code. Typically, they are caused by passing bad or contradictory parameters to functions.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;The thread causing the panic is terminated.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;These panics are raise [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PLAT_emulator {
            get {
                return ResourceManager.GetString("PLAT_emulator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;PLAT (generic Kernel)&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;These panics represent represent errors which are detected by  generic Kernel code. Typically, they are caused by passing bad or contradictory parameters to functions.&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;The thread causing the panic is terminated.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;This panic  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PLAT_generic_Kernel {
            get {
                return ResourceManager.GetString("PLAT_generic_Kernel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Protocol panic&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;The Sockets Server gives a &amp;amp;quot;Protocol panic&amp;amp;quot; when it finds incorrect protocol module behaviour.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;An unknown request completed&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_descr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Protocol_panic {
            get {
                return ResourceManager.GetString("Protocol_panic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsd:schema xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
        ///
        ///  &lt;xsd:element name=&quot;category_name&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;category_description&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;panic_id&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;panic_description&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;error_name&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;error_value&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:element name=&quot;error_component&quot; type=&quot;xsd:string&quot;/&gt;
        ///  &lt;xsd:el [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string schema {
            get {
                return ResourceManager.GetString("schema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Send&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Messaging panics from &amp;lt;code&amp;gt;CSendAs&amp;lt;/code&amp;gt;&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Out of range index passed to &amp;lt;code&amp;gt;CSendAs::SetMtmL()&amp;lt;/code&amp;gt; or CSendAs::SetService()&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;2&lt;/panic_id&gt;
        ///      &lt;panic_desc [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Send {
            get {
                return ResourceManager.GetString("Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;smlController&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;SyncML panics represent program errors which are detected by the SyncML framework. Typically, they are caused by passing bad or contradictory parameters to functions.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;The thread causing the panic is terminated. &amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Invalid parameter. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string smlController {
            get {
                return ResourceManager.GetString("smlController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;TCPIP&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panic of TCP/IP protocol family module&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Function is not supported&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Unused&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TCPIP {
            get {
                return ResourceManager.GetString("TCPIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Telephony&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Third party telephony panic:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;A client has attempted to re-post an asynchronous request before the original request has completed&amp;lt;/p&amp;gt;	   &lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///  &lt;/panics&gt;
        ///&lt;/panic_category&gt;.
        /// </summary>
        internal static string Telephony {
            get {
                return ResourceManager.GetString("Telephony", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;UI Graphics&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;UI Graphics Utilities panics:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;A resource null pointer.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;Resource specified has an invalid number type.&amp;lt;/p&amp;gt;&lt;/panic_descriptio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UI_Graphics {
            get {
                return ResourceManager.GetString("UI_Graphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;USER&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Panics with this category are raised on the user side by member functions of T type and R type classes which reside in &amp;lt;code class=&quot;filename&quot;&amp;gt;euser.dll&amp;lt;/code&amp;gt;.&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;They are also raised by some static member functions of the &amp;lt;code&amp;gt;User&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;UserHeap&amp;lt;/code&amp;gt; and &amp;lt;code&amp;gt;RHeap&amp;lt;/code&amp;gt; classes. Typically, they are c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string USER {
            get {
                return ResourceManager.GetString("USER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;USER-EXEC&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;No Description&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;3&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;In Symbian OS 8.1b, 9.0, 9.1 and subsequent versions:&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;this panic is raised when an exception is raised on the current thread by a call to &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;User::RaiseException()&amp;lt;/code&amp;gt;, and the thread h [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string USER_EXEC {
            get {
                return ResourceManager.GetString("USER_EXEC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;Versit-Parser&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt;Versit panics:&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;0&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;The parser has tried to access a token, but no current token exists.&amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt;An object of class &amp;lt;code&amp;gt;CVersitUnico [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Versit_Parser {
            get {
                return ResourceManager.GetString("Versit_Parser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;ViewSrv&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; The table below lists the View Server panics.&amp;lt;/p&amp;gt;&lt;/category_description&gt;
        ///  &lt;panics&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;1&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; View Server creation failed. &amp;lt;/p&amp;gt;&lt;/panic_description&gt;
        ///    &lt;/panic&gt;
        ///    &lt;panic&gt;
        ///      &lt;panic_id&gt;3&lt;/panic_id&gt;
        ///      &lt;panic_description&gt;&amp;lt;p&amp;gt; A bad client call was made - i.e. the opcode sent by t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ViewSrv {
            get {
                return ResourceManager.GetString("ViewSrv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;W32&lt;/category_name&gt;
        ///  &lt;category_description&gt;W32 is a synchronous interface onto the window server that user code can include, link to and invoke instead of sending low level client-server requests to the window server. Some errors can be detected before they are sent to the server and are raised as panics from W32. Code in the W32 synchronous interface runs in the client’s thread, so it raises panics in situations it can understand  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string W32 {
            get {
                return ResourceManager.GetString("W32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&apos;1.0&apos; encoding=&apos;UTF-8&apos;?&gt;
        ///&lt;panic_category&gt;
        ///  &lt;category_name&gt;WSERV&lt;/category_name&gt;
        ///  &lt;category_description&gt; &amp;lt;p&amp;gt; The window server runs continuously and brings the machine down if it crashes, so it cannot panic its own thread when it detects an error in one of its client&amp;amp;#8217;s requests. Instead it panics the client&amp;amp;#8217;s thread using &amp;lt;code class=&quot;ApiItem&quot;&amp;gt;CSession::Panic()&amp;lt;/code&amp;gt;. These panics have a category of WSERV. &amp;lt;/p&amp;gt; &amp;lt;p&amp;gt; These panics are defined [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WSERV {
            get {
                return ResourceManager.GetString("WSERV", resourceCulture);
            }
        }
    }
}
